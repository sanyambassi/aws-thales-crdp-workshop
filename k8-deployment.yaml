apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
      - name: webapp
        image: sanyambassi/crdp-demo-app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        env:
        - name: DB_HOST
          value: "mysql-service"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: DB_NAME
          value: "webappdb"
        - name: CRDP_HOST
          value: "localhost"
        - name: CRDP_PORT
          value: "8090"
      - name: crdp-container
        image: thalesciphertrust/ciphertrust-restful-data-protection:latest
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8090
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /liveness
            port: 8090
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
        env:
        - name: KEY_MANAGER_HOST
          value: "192.168.10.228"
        - name: SERVER_MODE
          value: "no-tls"
        - name: REGISTRATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: regtoken
              key: reg_token
      - name: jmeter
        image: justb4/jmeter:latest
        imagePullPolicy: IfNotPresent
        command: [ "sleep", "infinity" ]
        volumeMounts:
        - name: jmeter-volume
          mountPath: /jmeter
      imagePullSecrets:
      - name: regcred
      volumes:
      - name: jmeter-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: webapp-service
spec:
  selector:
    app: webapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: MYSQL_DATABASE
          value: "webappdb"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        - name: MYSQL_INITDB_SKIP_TZINFO
          value: "1"
        volumeMounts:
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
        ports:
        - containerPort: 3306
          name: mysql
      volumes:
      - name: initdb
        configMap:
          name: mysql-initdb-config
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
type: Opaque
data:
  username: ZGVtb3VzZXI=
  password: RGVtb1Bhc3N3b3Jk
